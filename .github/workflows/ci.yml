name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check-openapi:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12, 3.13]

    steps:
      - uses: actions/checkout@v4

      # --- Backend schema check ---
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: cd backend && pip install -r requirements.txt

      - name: Set environment variable SECRET_KEY
        run: echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV

      - name: Generate OpenAPI schema
        run: cd backend && python manage.py spectacular --file schema.yml

      - name: Upload schema.yml
        uses: actions/upload-artifact@v4
        with:
          name: schema-${{ matrix.python-version }}
          path: backend/schema.yml

      - name: Verify schema.yml is up-to-date
        run: git diff --exit-code backend/schema.yml

      # --- Frontend API client check ---
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Install Node.js dependencies
        run: cd frontend && npm ci

      - name: Generate API client
        run: cd frontend && npm run generate:api

      - name: Verify API client is up-to-date
        run: git diff --exit-code frontend/src/api

  test-and-coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # --- Backend coverage ---
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - run: cd backend && pip install -r requirements.txt
      - run: cd backend && pytest --cov=. --cov-report=xml

      # --- Frontend coverage ---
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: cd frontend && npm ci
      - run: cd frontend && npm run test -- --coverage --coverageReporters=lcov

      # --- Upload to Codecov ---
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: |
            backend/coverage.xml
            frontend/coverage/lcov.info
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }} # public repoなら不要
